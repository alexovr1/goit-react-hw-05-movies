{"version":3,"file":"static/js/361.3eabd906.chunk.js","mappings":"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","sources":["components/API/API_themoviedb.js","pages/MovieDetails/MovieDetails.styled.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: '8733d6e7e2025f98914d10d872f02ce9' };\n\nexport const getTrends = async () => {\n    return (await axios.get('/trending/all/day')).data;\n};\n\nexport const getSearch = async query => {\n    return (await axios.get(`/search/movie?query=${query}`)).data;\n};\n\nexport const getMovieDetails = async id => {\n    return (await axios.get(`/movie/${id}`)).data;\n};\n\nexport const getMovieCredits = async id => {\n    return (await axios.get(`/movie/${id}/credits`)).data;\n};\n\nexport const getMovieReviews = async id => {\n    return (await axios.get(`/movie/${id}/reviews`)).data;\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const BackButton = styled(Link)`\n  margin-left: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  gap: 10px;\n`;","import styled from \"styled-components\";\n\nexport const MovieBox = styled.div`\n  padding-top: 20px;\n  padding-bottom: 5px;\n  display: flex;\n  gap: 20px;\n  border-bottom: 1px solid gray;\n`;\nexport const InfoBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\nexport const AdditionalBox = styled.div`\n  border-bottom: 1px solid #000;\n`;","import PropTypes from 'prop-types';\nimport { InfoBox, MovieBox, AdditionalBox } from './MovieInfo.styled';\nimport { useParams, Link, useLocation } from 'react-router-dom';\n\nexport const MovieInfo = ({ data }) => {\n    const location = useLocation();\n\n    const { movieId } = useParams();\n    const { poster_path, original_title, vote_average, overview, genres } = data;\n    const genresNames = genres.map(genre => genre.name).join(` `);\n    const posterUrl = `https://image.tmdb.org/t/p/w200${poster_path}`;\n    const rating = vote_average.toFixed(1) * 10;\n\n    return (\n        <>\n            <MovieBox>\n                <img src={posterUrl} alt={original_title} style={{ maxWidth: 800 }} />\n                <InfoBox>\n                    <h2>{original_title}</h2>\n                    <p>User Score: {rating}%</p>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                    <h3>Genres</h3>\n                    <p>{genresNames}</p>\n                </InfoBox>\n            </MovieBox>\n            <AdditionalBox>\n                Additional information\n                <ul>\n                    <li>\n                        <Link\n                            to={`/movies/${movieId}/cast`}\n                            state={{ from: location.state?.from ?? '/' }}\n                        >\n                            Cast\n                        </Link>\n                    </li>\n                    <li>\n                        <Link\n                            to={`/movies/${movieId}/reviews`}\n                            state={{ from: location.state?.from ?? '/' }}\n                        >\n                            Reviews\n                        </Link>\n                    </li>\n                </ul>\n            </AdditionalBox>\n        </>\n    );\n};\n\nMovieInfo.propTypes = {\n    data: PropTypes.shape({\n        poster_path: PropTypes.string.isRequired,\n        original_title: PropTypes.string.isRequired,\n        vote_average: PropTypes.number.isRequired,\n        overview: PropTypes.string.isRequired,\n        genres: PropTypes.arrayOf(\n            PropTypes.shape({\n                name: PropTypes.string.isRequired,\n            })\n        ),\n    }),\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { BackButton } from './MovieDetails.styled';\nimport { getMovieDetails } from 'components/API/API_themoviedb';\nimport { MovieInfo } from '../../components/MovieInfo/MovieInfo';\n\nconst MovieDetails = () => {\n    const [movieData, setMovieData] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const { movieId } = useParams();\n    const location = useLocation();\n\n    useEffect(() => {\n        async function fetchMovie() {\n            try {\n                setIsLoading(true);\n                const result = await getMovieDetails(movieId);\n                setMovieData(result);\n            } catch (error) {\n                console.log(error);\n                return alert(`Sorry, please try again`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        fetchMovie();\n    }, [movieId]);\n    return (\n        <div>\n            <BackButton to={location.state?.from ?? '/'}>\n                <BiArrowBack />\n                Go back\n            </BackButton>\n            {isLoading && <div>...Loading</div>}\n            {movieData && <MovieInfo data={movieData} />}\n            <Suspense fallback={<div>...Loading</div>}>\n                <Outlet />\n            </Suspense>\n        </div>\n    );\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","getTrends","data","getSearch","query","getMovieDetails","id","getMovieCredits","getMovieReviews","BackButton","styled","Link","MovieBox","InfoBox","AdditionalBox","MovieInfo","location","useLocation","movieId","useParams","poster_path","original_title","vote_average","overview","genresNames","genres","map","genre","name","join","posterUrl","rating","toFixed","src","alt","style","maxWidth","to","state","from","useState","movieData","setMovieData","isLoading","setIsLoading","useEffect","result","console","log","alert","fetchMovie","Suspense","fallback"],"sourceRoot":""}