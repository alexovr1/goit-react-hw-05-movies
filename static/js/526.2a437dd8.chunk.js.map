{"version":3,"file":"static/js/526.2a437dd8.chunk.js","mappings":"8SAEAA,EAAAA,GAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,GAAAA,SAAAA,OAAwB,CAAEC,QAAS,oCAE5B,IAAMC,EAAS,mCAAG,8FACPF,EAAAA,GAAAA,IAAU,qBADH,uCACyBG,MADzB,2CAAH,qDAITC,EAAS,mCAAG,WAAMC,GAAN,iFACPL,EAAAA,GAAAA,IAAA,8BAAiCK,IAD1B,uCACoCF,MADpC,2CAAH,sDAITG,EAAe,mCAAG,WAAMC,GAAN,iFACbP,EAAAA,GAAAA,IAAA,iBAAoBO,IADP,uCACcJ,MADd,2CAAH,sDAIfK,EAAe,mCAAG,WAAMD,GAAN,iFACbP,EAAAA,GAAAA,IAAA,iBAAoBO,EAApB,aADa,uCACsBJ,MADtB,2CAAH,sDAIfM,EAAe,mCAAG,WAAMF,GAAN,iFACbP,EAAAA,GAAAA,IAAA,iBAAoBO,EAApB,aADa,uCACsBJ,MADtB,2CAAH,qD,sFCnBfO,E,OAAaC,GAAAA,GAAH,kF,SCCVC,EAAY,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAClBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACL,EAAD,UACKG,EAAWG,KAAI,SAAAC,GAAK,OACjB,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAMV,IAAMY,MAAO,CAAEC,KAAMN,GAAhD,SACKG,EAAMI,OAASJ,EAAMK,QAFrBL,EAAMV,GADE,KAShC,C,2JCdYgB,EAAcZ,EAAAA,GAAAA,IAAH,qEAIXa,EAAYb,EAAAA,GAAAA,GAAH,iE,SC2BtB,EA7Ba,WACT,OAAoCc,EAAAA,EAAAA,UAAS,MAA7C,eAAOZ,EAAP,KAAmBa,EAAnB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,sGAEQD,GAAa,GAFrB,UAGkC1B,EAAAA,EAAAA,MAHlC,gBAGgB4B,EAHhB,EAGgBA,QACRJ,EAAcI,GAJtB,gDAMQC,QAAQC,IAAR,MANR,yBASQJ,GAAa,GATrB,6EADY,uBAAC,WAAD,wBAaZK,EACH,GAAE,KAGC,UAACV,EAAD,YACI,SAACC,EAAD,6BACCG,IAAa,wCACbd,IAAc,SAACD,EAAA,EAAD,CAAWC,WAAYA,MAGjD,C","sources":["components/API/API_themoviedb.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","pages/Home/Home.styled.js","pages/Home/Home.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: '8733d6e7e2025f98914d10d872f02ce9' };\n\nexport const getTrends = async () => {\n    return (await axios.get('/trending/all/day')).data;\n};\n\nexport const getSearch = async query => {\n    return (await axios.get(`/search/movie?query=${query}`)).data;\n};\n\nexport const getMovieDetails = async id => {\n    return (await axios.get(`/movie/${id}`)).data;\n};\n\nexport const getMovieCredits = async id => {\n    return (await axios.get(`/movie/${id}/credits`)).data;\n};\n\nexport const getMovieReviews = async id => {\n    return (await axios.get(`/movie/${id}/reviews`)).data;\n};","import styled from \"styled-components\";\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MoviesList } from './MovieList.styled';\nexport const MovieList = ({ moviesData }) => {\n    const location = useLocation();\n\n    return (\n        <MoviesList>\n            {moviesData.map(movie => (\n                <li key={movie.id}>\n                    <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                        {movie.title || movie.name}\n                    </Link>\n                </li>\n            ))}\n        </MoviesList>\n    );\n};\n\nMovieList.propTypes = {\n    moviesData: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n        })\n    ),\n};","import styled from 'styled-components';\n\n\nexport const HomeWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const HomeTitle = styled.h1`\n  font-weight: 900;\n  font-size: 36px;\n`;","import { useState, useEffect } from 'react';\nimport { getTrends } from '../../components/API/API_themoviedb';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { HomeTitle, HomeWrapper } from './Home.styled';\n\nconst Home = () => {\n    const [moviesData, setMoviesData] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        async function getFilms() {\n            try {\n                setIsLoading(true);\n                const { results } = await getTrends();\n                setMoviesData(results);\n            } catch (error) {\n                console.log(error);\n                // return alert(`Sorry, please try again`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        getFilms();\n    }, []);\n\n    return (\n        <HomeWrapper>\n            <HomeTitle>Trending today</HomeTitle>\n            {isLoading && <div>...Loading</div>}\n            {moviesData && <MovieList moviesData={moviesData} />}\n        </HomeWrapper>\n    );\n};\n\nexport default Home;"],"names":["axios","api_key","getTrends","data","getSearch","query","getMovieDetails","id","getMovieCredits","getMovieReviews","MoviesList","styled","MovieList","moviesData","location","useLocation","map","movie","to","state","from","title","name","HomeWrapper","HomeTitle","useState","setMoviesData","isLoading","setIsLoading","useEffect","results","console","log","getFilms"],"sourceRoot":""}