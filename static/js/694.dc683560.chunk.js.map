{"version":3,"file":"static/js/694.dc683560.chunk.js","mappings":"8SAEAA,EAAAA,GAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,GAAAA,SAAAA,OAAwB,CAAEC,QAAS,oCAE5B,IAAMC,EAAS,mCAAG,8FACPF,EAAAA,GAAAA,IAAU,qBADH,uCACyBG,MADzB,2CAAH,qDAITC,EAAS,mCAAG,WAAMC,GAAN,iFACPL,EAAAA,GAAAA,IAAA,8BAAiCK,IAD1B,uCACoCF,MADpC,2CAAH,sDAITG,EAAe,mCAAG,WAAMC,GAAN,iFACbP,EAAAA,GAAAA,IAAA,iBAAoBO,IADP,uCACcJ,MADd,2CAAH,sDAIfK,EAAe,mCAAG,WAAMD,GAAN,iFACbP,EAAAA,GAAAA,IAAA,iBAAoBO,EAApB,aADa,uCACsBJ,MADtB,2CAAH,sDAIfM,EAAe,mCAAG,WAAMF,GAAN,iFACbP,EAAAA,GAAAA,IAAA,iBAAoBO,EAApB,aADa,uCACsBJ,MADtB,2CAAH,qD,4JCnBfO,EAAcC,EAAAA,GAAAA,GAAH,mFAKXC,EAAcD,EAAAA,GAAAA,GAAH,mF,SCyCxB,EA3CgB,WACZ,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WAAM,wCACZ,sGAEQH,GAAa,GAFrB,UAGkCR,EAAAA,EAAAA,IAAgBS,GAHlD,gBAGgBG,EAHhB,EAGgBA,QACRN,EAAWM,GAJnB,uDAMQC,QAAQC,IAAR,MANR,kBAOeC,MAAM,4BAPrB,yBASQP,GAAa,GATrB,6EADY,uBAAC,WAAD,wBAaZQ,EACH,GAAE,CAACP,KAGA,2BACKF,IAAa,2CACbF,EAAQY,OAAS,GACd,SAAChB,EAAD,UACKI,EAAQa,KAAI,SAAAC,GACT,OACI,UAAChB,EAAD,YACI,wBAAKgB,EAAOC,UACZ,uBAAID,EAAOE,YAFGF,EAAOrB,GAKhC,OAGL,uEAIf,C","sources":["components/API/API_themoviedb.js","pages/Reviews/Reviews.styled.js","pages/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: '8733d6e7e2025f98914d10d872f02ce9' };\n\nexport const getTrends = async () => {\n    return (await axios.get('/trending/all/day')).data;\n};\n\nexport const getSearch = async query => {\n    return (await axios.get(`/search/movie?query=${query}`)).data;\n};\n\nexport const getMovieDetails = async id => {\n    return (await axios.get(`/movie/${id}`)).data;\n};\n\nexport const getMovieCredits = async id => {\n    return (await axios.get(`/movie/${id}/credits`)).data;\n};\n\nexport const getMovieReviews = async id => {\n    return (await axios.get(`/movie/${id}/reviews`)).data;\n};","import styled from \"styled-components\";\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\nexport const ReviewsItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;","import { getMovieReviews } from 'components/API/API_themoviedb';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsItem, ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        async function fetchReviews() {\n            try {\n                setIsLoading(true);\n                const { results } = await getMovieReviews(movieId);\n                setReviews(results);\n            } catch (error) {\n                console.log(error);\n                return alert(`Sorry, please try again`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        fetchReviews();\n    }, [movieId]);\n\n    return (\n        <div>\n            {isLoading && <div>...is Loading</div>}\n            {reviews.length > 0 ? (\n                <ReviewsList>\n                    {reviews.map(review => {\n                        return (\n                            <ReviewsItem key={review.id}>\n                                <h3>{review.author}</h3>\n                                <p>{review.content}</p>\n                            </ReviewsItem>\n                        );\n                    })}\n                </ReviewsList>\n            ) : (\n                <p>We don't have any reviews for this movie.</p>\n            )}\n        </div>\n    );\n};\n\nexport default Reviews;\n"],"names":["axios","api_key","getTrends","data","getSearch","query","getMovieDetails","id","getMovieCredits","getMovieReviews","ReviewsList","styled","ReviewsItem","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","results","console","log","alert","fetchReviews","length","map","review","author","content"],"sourceRoot":""}